{"version":3,"file":"static/js/326.56ba1050.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/auth-forms/RadioBox.js","views/pages/authentication/auth-forms/RegisterTest.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSocialGoogle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport Google from 'assets/images/icons/social-google.svg';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nconst FirebaseRegister = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = useState(false);\n    const [checked, setChecked] = useState(true);\n\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box sx={{ mb: 2 }}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                style={{ backgroundColor: level?.color }}\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level?.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseRegister;\n","import * as React from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nexport default function RowRadioButtonsGroup() {\n    return (\n        <FormControl>\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Role Type</FormLabel>\n            <RadioGroup row aria-labelledby=\"demo-row-radio-buttons-group-label\" name=\"row-radio-buttons-group\">\n                <FormControlLabel name=\"minter\" value=\"minter\" control={<Radio />} label=\"Minter\" />\n                <FormControlLabel name=\"observer\" value=\"observer\" control={<Radio />} label=\"Observer\" />\n            </RadioGroup>\n        </FormControl>\n    );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport Axios from 'axios';\nimport RowRadioButtonsGroup from './RadioBox';\n\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://mui.com/\">\n                V systems\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        let role = data.get('minter');\n        if (!role) {\n            role = 'observer';\n        }\n        // console.log(role);\n        const postRq = {\n            Username: data.get('username'),\n            Password: data.get('password'),\n            Role: role\n        };\n        // window.location.replace('/free');\n        Axios.post('http://localhost:8080/api/register', postRq).then((response) => {\n            console.log(response);\n\n            // window.location.replace('free/login');\n\n            if (response.status == 201) {\n                window.location.replace('/free');\n            }\n        });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center'\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField required fullWidth id=\"username\" label=\"Username\" name=\"username\" autoComplete=\"username\" />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                            <Grid sx={{ marginTop: 5 }}>\n                                <RowRadioButtonsGroup />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            //\n                            //\n                            //\n                            //\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n                <Copyright sx={{ mt: 5 }} />\n            </Container>\n        </ThemeProvider>\n    );\n}\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthRegister from '../auth-forms/AuthRegister';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\nimport SignUp from '../auth-forms/RegisterTest';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        {/* <Link to=\"#\">\n                                            <Logo />\n                                        </Link> */}\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                        href=\"/free/dashboard/default\"\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        {/* <AuthRegister /> */}\n                                        <SignUp />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","RowRadioButtonsGroup","FormLabel","id","RadioGroup","row","name","value","control","Radio","label","Copyright","props","color","align","Date","getFullYear","createTheme","SignUp","ThemeProvider","Container","CssBaseline","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","role","get","postRq","Username","Password","Role","Axios","then","response","console","log","status","window","location","replace","mt","container","spacing","item","required","fullWidth","autoComplete","type","mb","useTheme","matchDownSM","useMediaQuery","breakpoints","down","AuthCardWrapper","Stack","secondary","main","gutterBottom","fontSize","textAlign","to","textDecoration","AuthFooter"],"sourceRoot":""}