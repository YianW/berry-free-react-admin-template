{"version":3,"file":"static/js/62.c8ad1eb5.chunk.js","mappings":"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","sources":["views/marketplace/progess.js","views/marketplace/PjtDetails.js","views/marketplace/TxTable.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ width: '100%', mr: 1 }}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box sx={{ minWidth: 35 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired\n};\n\nexport default function LinearWithValueLabel() {\n    const [progress, setProgress] = React.useState(10);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n        }, 800);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <Box sx={{ width: '100%' }}>\n            <LinearProgressWithLabel value={progress} />\n        </Box>\n    );\n}\n","import { Card } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nimport MainCard from 'ui-component/cards/MainCard';\n\nimport StickyHeadTable from './TxTable';\nimport LinearWithValueLabel from './progess';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst TablerIcons = () => (\n    <MainCard title=\"Project Details\">\n        <Card sx={{ overflow: 'hidden' }}>\n            <Grid item xs={12} sm container sx={{ float: 'left' }}>\n                <Typography variant=\"h3\" sx={{ mb: 3 }}>Minting Progess</Typography>\n            </Grid>\n            <Grid item xs={12} sm container sx={{ float: 'left', marginBottom: 5 }}>\n                <LinearWithValueLabel />\n            </Grid>\n            <SubCard>\n                <Typography variant=\"h3\">Mint Queue</Typography>\n                <Grid item xs={12} sm container sx={{ float: 'left' }}>\n                    <StickyHeadTable />\n                </Grid>\n                <Typography variant=\"h3\">NFT minted</Typography>\n                <Grid item xs={12} sm container sx={{ float: 'left' }}>\n                    <StickyHeadTable />\n                </Grid>\n            </SubCard>\n        </Card>\n    </MainCard>\n);\n\nexport default TablerIcons;\n","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\nconst columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'population',\n        label: 'Population',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'size',\n        label: 'Size\\u00a0(km\\u00b2)',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'density',\n        label: 'Density',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2)\n    }\n];\n\nfunction createData(name, code, population, size) {\n    const density = population / size;\n    return { name, code, population, size, density };\n}\n\nconst rows = [\n    createData('India', 'IN', 1324171354, 3287263),\n    createData('China', 'CN', 1403500365, 9596961),\n    createData('Italy', 'IT', 60483973, 301340),\n    createData('United States', 'US', 327167434, 9833520),\n    createData('Canada', 'CA', 37602103, 9984670),\n    createData('Australia', 'AU', 25475400, 7692024),\n    createData('Germany', 'DE', 83019200, 357578),\n    createData('Ireland', 'IE', 4857000, 70273),\n    createData('Mexico', 'MX', 126577691, 1972550),\n    createData('Japan', 'JP', 126317000, 377973),\n    createData('France', 'FR', 67022000, 640679),\n    createData('United Kingdom', 'GB', 67545757, 242495),\n    createData('Russia', 'RU', 146793744, 17098246),\n    createData('Nigeria', 'NG', 200962417, 923768),\n    createData('Brazil', 'BR', 210147125, 8515767)\n];\n\nexport default function StickyHeadTable() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n"],"names":["LinearProgressWithLabel","props","Box","sx","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","LinearWithValueLabel","progress","setProgress","React","timer","setInterval","prevProgress","clearInterval","MainCard","title","Card","overflow","Grid","item","xs","sm","container","float","mb","marginBottom","SubCard","columns","id","label","align","format","toLocaleString","toFixed","createData","name","code","population","size","density","rows","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","maxHeight","stickyHeader","map","column","style","slice","row","hover","role","tabIndex","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target"],"sourceRoot":""}