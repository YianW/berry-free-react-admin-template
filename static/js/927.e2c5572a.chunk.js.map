{"version":3,"file":"static/js/927.e2c5572a.chunk.js","mappings":"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","sources":["views/settings/APIKey.js","views/settings/TxTable.js"],"sourcesContent":["import React from 'react';\nimport {\n    Grid,\n    Box,\n    Button,\n    TextField,\n} from '@mui/material';\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\nimport Axios from 'axios';\nimport StickyHeadTable from './TxTable';\n\nconst SetWal = () => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const postRq = {\n            merchant_id: data.get('merchantid'),\n            user_vsys_addr: 'ATse3RcjEzwc5JHDPcduPYe4qA2mWhSNZaV',\n            mojo_amount: data.get('mojo'),\n            pt_amount: data.get('point')\n        };\n        const config = {\n            Headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n        console.log(postRq);\n        Axios.post('http://localhost:8080/api/manualtransfer', postRq, config)\n            .then((response) => {\n                console.log('Transaction Succeeded. The transaction id is ', response);\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    };\n\n    return (\n        <>\n            <MainCard title=\"Insert API Key\">\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <SubCard sx={{ paddingTop: 2 }}>\n                            <Grid container spacing={gridSpacing}>\n                                <Box\n                                    sx={{\n                                        marginTop: 1,\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        alignItems: 'center'\n                                    }}\n                                >\n                                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                                        <TextField\n                                            id=\"point\"\n                                            label=\"API Key\"\n                                            name=\"addr\"\n                                            defaultValue=\"API Key\"\n                                            sx={{\n                                                marginLeft: 5,\n                                                marginRight: 5,\n                                                marginBottom: 5,\n                                                marginTop: 2,\n                                                width: 200\n                                            }}\n                                        />\n                                        <Grid>\n                                            <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2, ml: 5, width: 150 }}>\n                                                Confirm\n                                            </Button>\n                                        </Grid>\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                </Grid>\n            </MainCard>\n        </>\n    );\n};\n\nexport default SetWal;","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\nconst columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'population',\n        label: 'Population',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'size',\n        label: 'Size\\u00a0(km\\u00b2)',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US')\n    },\n    {\n        id: 'density',\n        label: 'Density',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2)\n    }\n];\n\nfunction createData(name, code, population, size) {\n    const density = population / size;\n    return { name, code, population, size, density };\n}\n\nconst rows = [\n    createData('India', 'IN', 1324171354, 3287263),\n    createData('China', 'CN', 1403500365, 9596961),\n    createData('Italy', 'IT', 60483973, 301340),\n    createData('United States', 'US', 327167434, 9833520),\n    createData('Canada', 'CA', 37602103, 9984670),\n    createData('Australia', 'AU', 25475400, 7692024),\n    createData('Germany', 'DE', 83019200, 357578),\n    createData('Ireland', 'IE', 4857000, 70273),\n    createData('Mexico', 'MX', 126577691, 1972550),\n    createData('Japan', 'JP', 126317000, 377973),\n    createData('France', 'FR', 67022000, 640679),\n    createData('United Kingdom', 'GB', 67545757, 242495),\n    createData('Russia', 'RU', 146793744, 17098246),\n    createData('Nigeria', 'NG', 200962417, 923768),\n    createData('Brazil', 'BR', 210147125, 8515767)\n];\n\nexport default function StickyHeadTable() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n}\n"],"names":["title","container","spacing","gridSpacing","item","xs","sx","paddingTop","marginTop","display","flexDirection","alignItems","component","onSubmit","event","preventDefault","data","FormData","currentTarget","postRq","merchant_id","get","user_vsys_addr","mojo_amount","pt_amount","console","log","Axios","Headers","then","response","catch","error","alert","noValidate","mt","id","label","name","defaultValue","marginLeft","marginRight","marginBottom","width","type","fullWidth","variant","mb","ml","columns","minWidth","align","format","value","toLocaleString","toFixed","createData","code","population","size","density","rows","StickyHeadTable","page","setPage","React","rowsPerPage","setRowsPerPage","overflow","maxHeight","stickyHeader","map","column","style","slice","row","hover","role","tabIndex","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","target"],"sourceRoot":""}